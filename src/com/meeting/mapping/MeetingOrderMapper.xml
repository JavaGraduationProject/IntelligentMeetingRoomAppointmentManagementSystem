<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meeting.dao.MeetingOrderMapper">
  <resultMap id="BaseResultMap" type="com.meeting.model.MeetingOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
        <result column="title" property="title" jdbcType="VARCHAR" />
  <result column="uid" property="uid" jdbcType="INTEGER" />
  <result column="udepart_id" property="udepartId" jdbcType="INTEGER" />
  <result column="rid" property="rid" jdbcType="INTEGER" />
  <result column="start_time" property="startTime" jdbcType="VARCHAR" />
  <result column="end_time" property="endTime" jdbcType="VARCHAR" />
  <result column="total_hours" property="totalHours" jdbcType="DOUBLE" />
  <result column="using_intro" property="usingIntro" jdbcType="VARCHAR" />
  <result column="meeting_status" property="meetingStatus" jdbcType="INTEGER" />
  <result column="create_time" property="createTime" jdbcType="VARCHAR" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
     id,title,uid,udepart_id,rid,start_time,end_time,total_hours,using_intro,meeting_status,create_time
  </sql>
  <select id="selectByExample" parameterType="com.meeting.model.MeetingOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from meeting_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
     <if test="startRow >= 0 and pageRows > 0">
  limit ${startRow},${pageRows}
  </if>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from meeting_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
   delete from meeting_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.meeting.model.MeetingOrderExample">
    delete from meeting_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.meeting.model.MeetingOrder">
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

      insert into meeting_order (title,uid,udepart_id,rid,start_time,end_time,total_hours,using_intro,meeting_status,create_time)
      values (	#{id,jdbcType=INTEGER},	#{title,jdbcType=VARCHAR},	#{uid,jdbcType=INTEGER},	#{udepartId,jdbcType=INTEGER},	#{rid,jdbcType=INTEGER},	#{startTime,jdbcType=VARCHAR},	#{endTime,jdbcType=VARCHAR},	#{totalHours,jdbcType=DOUBLE},	#{usingIntro,jdbcType=VARCHAR},	#{meetingStatus,jdbcType=INTEGER},	#{createTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.meeting.model.MeetingOrder">
   <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

    insert into meeting_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null" >
	  id,
 </if>
<if test="title != null" >
	  title,
 </if>
<if test="uid != null" >
	  uid,
 </if>
<if test="udepartId != null" >
	  udepart_id,
 </if>
<if test="rid != null" >
	  rid,
 </if>
<if test="startTime != null" >
	  start_time,
 </if>
<if test="endTime != null" >
	  end_time,
 </if>
<if test="totalHours != null" >
	  total_hours,
 </if>
<if test="usingIntro != null" >
	  using_intro,
 </if>
<if test="meetingStatus != null" >
	  meeting_status,
 </if>
<if test="createTime != null" >
	  create_time
 </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
         <if test="id != null" >
	 #{id,jdbcType=INTEGER},
	 </if>
  <if test="title != null" >
	 #{title,jdbcType=VARCHAR},
	 </if>
  <if test="uid != null" >
	 #{uid,jdbcType=INTEGER},
	 </if>
  <if test="udepartId != null" >
	 #{udepartId,jdbcType=INTEGER},
	 </if>
  <if test="rid != null" >
	 #{rid,jdbcType=INTEGER},
	 </if>
  <if test="startTime != null" >
	 #{startTime,jdbcType=VARCHAR},
	 </if>
  <if test="endTime != null" >
	 #{endTime,jdbcType=VARCHAR},
	 </if>
  <if test="totalHours != null" >
	 #{totalHours,jdbcType=DOUBLE},
	 </if>
  <if test="usingIntro != null" >
	 #{usingIntro,jdbcType=VARCHAR},
	 </if>
  <if test="meetingStatus != null" >
	 #{meetingStatus,jdbcType=INTEGER},
	 </if>
  <if test="createTime != null" >
	 #{createTime,jdbcType=VARCHAR},
	 </if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="com.meeting.model.MeetingOrderExample" resultType="java.lang.Long">
    select count(*) from meeting_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update meeting_order
    <set>
       <if test="record.title != null" >
	 title = #{record.title,jdbcType=VARCHAR},
</if>
 <if test="record.uid != null" >
	 uid = #{record.uid,jdbcType=INTEGER},
</if>
 <if test="record.udepartId != null" >
	 udepart_id = #{record.udepartId,jdbcType=INTEGER},
</if>
 <if test="record.rid != null" >
	 rid = #{record.rid,jdbcType=INTEGER},
</if>
 <if test="record.startTime != null" >
	 start_time = #{record.startTime,jdbcType=VARCHAR},
</if>
 <if test="record.endTime != null" >
	 end_time = #{record.endTime,jdbcType=VARCHAR},
</if>
 <if test="record.totalHours != null" >
	 total_hours = #{record.totalHours,jdbcType=DOUBLE},
</if>
 <if test="record.usingIntro != null" >
	 using_intro = #{record.usingIntro,jdbcType=VARCHAR},
</if>
 <if test="record.meetingStatus != null" >
	 meeting_status = #{record.meetingStatus,jdbcType=INTEGER},
</if>
 <if test="record.createTime != null" >
	 create_time = #{record.createTime,jdbcType=VARCHAR}
</if>

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update meeting_order
    set 
    				title = #{record.title,jdbcType=VARCHAR},	uid = #{record.uid,jdbcType=INTEGER},	udepart_id = #{record.udepartId,jdbcType=INTEGER},	rid = #{record.rid,jdbcType=INTEGER},	start_time = #{record.startTime,jdbcType=VARCHAR},	end_time = #{record.endTime,jdbcType=VARCHAR},	total_hours = #{record.totalHours,jdbcType=DOUBLE},	using_intro = #{record.usingIntro,jdbcType=VARCHAR},	meeting_status = #{record.meetingStatus,jdbcType=INTEGER},	create_time = #{record.createTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.meeting.model.MeetingOrder">
    update meeting_order
    <set>
       <if test="title != null" >
	 title = #{title,jdbcType=VARCHAR},
</if>
 <if test="uid != null" >
	 uid = #{uid,jdbcType=INTEGER},
</if>
 <if test="udepartId != null" >
	 udepart_id = #{udepartId,jdbcType=INTEGER},
</if>
 <if test="rid != null" >
	 rid = #{rid,jdbcType=INTEGER},
</if>
 <if test="startTime != null" >
	 start_time = #{startTime,jdbcType=VARCHAR},
</if>
 <if test="endTime != null" >
	 end_time = #{endTime,jdbcType=VARCHAR},
</if>
 <if test="totalHours != null" >
	 total_hours = #{totalHours,jdbcType=DOUBLE},
</if>
 <if test="usingIntro != null" >
	 using_intro = #{usingIntro,jdbcType=VARCHAR},
</if>
 <if test="meetingStatus != null" >
	 meeting_status = #{meetingStatus,jdbcType=INTEGER},
</if>
 <if test="createTime != null" >
	 create_time = #{createTime,jdbcType=VARCHAR}
</if>

    </set>
     where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.meeting.model.MeetingOrder">
    update meeting_order
    set 
     			title = #{title,jdbcType=VARCHAR},	uid = #{uid,jdbcType=INTEGER},	udepart_id = #{udepartId,jdbcType=INTEGER},	rid = #{rid,jdbcType=INTEGER},	start_time = #{startTime,jdbcType=VARCHAR},	end_time = #{endTime,jdbcType=VARCHAR},	total_hours = #{totalHours,jdbcType=DOUBLE},	using_intro = #{usingIntro,jdbcType=VARCHAR},	meeting_status = #{meetingStatus,jdbcType=INTEGER},	create_time = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>
